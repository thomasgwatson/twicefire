{"version":3,"sources":["webpack:///./src/templates/tags.tsx","webpack:///./node_modules/core-js/modules/es6.array.find.js","webpack:///./node_modules/core-js/modules/_array-methods.js","webpack:///./node_modules/core-js/modules/_array-species-create.js","webpack:///./node_modules/core-js/modules/_array-species-constructor.js"],"names":["Tags","props","tag","pageContext","data","allMarkdownRemark","edges","totalCount","tagData","allTagYaml","find","n","node","id","toLowerCase","lang","config","title","name","content","description","property","siteUrl","pathContext","slug","facebook","twitter","split","className","SiteHeader","outer","image","style","backgroundImage","childImageSharp","fluid","src","inner","isHome","SiteMain","PostFeed","PostFeedRaise","map","key","fields","post","pageQuery","$export","$find","forced","Array","P","F","callbackfn","this","arguments","length","undefined","ctx","IObject","toObject","toLength","asc","module","exports","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","create","$this","that","val","res","O","self","f","index","result","push","speciesConstructor","original","isObject","isArray","SPECIES","C","constructor","prototype"],"mappings":"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","file":"component---src-templates-tags-tsx-28928c393ad942fe4dce.js","sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\n\nimport Footer from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport PostCard from '../components/PostCard';\nimport Wrapper from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  inner,\n  outer,\n  PostFeed,\n  PostFeedRaise,\n  SiteDescription,\n  SiteHeader,\n  SiteHeaderContent,\n  SiteMain,\n  SiteTitle,\n} from '../styles/shared';\nimport { PageContext } from './post';\nimport Helmet from 'react-helmet';\nimport config from '../website-config';\n\ninterface TagTemplateProps {\n  pathContext: {\n    slug: string;\n  };\n  pageContext: {\n    tag: string;\n  };\n  data: {\n    allTagYaml: {\n      edges: {\n        node: {\n          id: string;\n          description: string;\n          image?: {\n            childImageSharp: {\n              fluid: any;\n            };\n          };\n        };\n      }[];\n    };\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: {\n        node: PageContext;\n      }[];\n    };\n  };\n}\n\nconst Tags: React.FunctionComponent<TagTemplateProps> = props => {\n  const tag = props.pageContext.tag;\n  const { edges, totalCount } = props.data.allMarkdownRemark;\n  const tagData = props.data.allTagYaml.edges.find(\n    n => n.node.id.toLowerCase() === tag.toLowerCase(),\n  );\n\n  return (\n    <IndexLayout>\n      <Helmet>\n        <html lang={config.lang} />\n        <title>\n          {tag} - {config.title}\n        </title>\n        <meta name=\"description\" content={tagData && tagData.node ? tagData.node.description : ''} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content={`${tag} - ${config.title}`} />\n        <meta property=\"og:url\" content={config.siteUrl + props.pathContext.slug} />\n        <meta property=\"article:publisher\" content={config.facebook} />\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={`${tag} - ${config.title}`} />\n        <meta name=\"twitter:url\" content={config.siteUrl + props.pathContext.slug} />\n        <meta name=\"twitter:site\" content={`@${config.twitter.split('https://twitter.com/')[0]}`} />\n      </Helmet>\n      <Wrapper>\n        <header\n          className={`${SiteHeader} ${outer} ${tagData && tagData.node.image ? '' : 'no-cover'}`}\n          style={{\n            backgroundImage:\n              tagData && tagData.node.image\n                ? `url('${tagData.node.image.childImageSharp.fluid.src}')`\n                : '',\n          }}\n        >\n          <div className={`${inner}`}>\n            <SiteNav isHome={false} />\n            <SiteHeaderContent>\n              <SiteTitle>{tag}</SiteTitle>\n              <SiteDescription>\n                {tagData && tagData.node.description ? (\n                  tagData.node.description\n                ) : (\n                  <>\n                    A collection of {totalCount > 1 && `${totalCount} posts`}\n                    {totalCount === 1 && `1 post`}\n                    {totalCount === 0 && `No posts`}\n                  </>\n                )}\n              </SiteDescription>\n            </SiteHeaderContent>\n          </div>\n        </header>\n        <main id=\"site-main\" className={`${SiteMain} ${outer}`}>\n          <div className={`${inner}`}>\n            <div className={`${PostFeed} ${PostFeedRaise}`}>\n              {edges.map(({ node }) => (\n                <PostCard key={node.fields.slug} post={node} />\n              ))}\n            </div>\n          </div>\n        </main>\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allTagYaml {\n      edges {\n        node {\n          id\n          description\n          image {\n            childImageSharp {\n              fluid(maxWidth: 3720) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            date\n            image {\n              childImageSharp {\n                fluid(maxWidth: 1240) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            author {\n              id\n              bio\n              avatar {\n                children {\n                  ... on ImageSharp {\n                    fixed(quality: 100) {\n                      src\n                    }\n                  }\n                }\n              }\n            }\n          }\n          fields {\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\nvar IObject = require('./_iobject');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar asc = require('./_array-species-create');\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n","var isObject = require('./_is-object');\nvar isArray = require('./_is-array');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n"],"sourceRoot":""}