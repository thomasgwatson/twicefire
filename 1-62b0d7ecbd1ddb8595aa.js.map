{"version":3,"sources":["webpack:///./src/styles/colors.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/website-config.ts","webpack:///./src/styles/shared.ts","webpack:///./src/components/Wrapper.tsx","webpack:///./src/layouts/index.tsx","webpack:///./src/components/PostCard.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/components/subsribe/SubscribeLogo.tsx","webpack:///./src/components/subsribe/SubscribeOverlay.tsx","webpack:///./src/components/header/SiteNav.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/icons/twitter.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/subsribe/SubscribeForm.tsx","webpack:///./src/components/header/SiteNavLogo.tsx","webpack:///./src/components/icons/facebook.tsx"],"names":["colors","blue","jade","green","purple","yellow","red","darkgrey","midgrey","lightgrey","whitegrey","pink","brown","gold","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","data","query","render","finalData","Fragment","StaticQuery","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","config","title","description","coverImage","logo","lang","siteUrl","twitter","showSubscribe","mailchimpAction","mailchimpName","outer","inner","SiteMain","SiteTitle","SiteDescription","PostFeed","PostFeedRaise","SocialLink","SiteHeader","darken","SiteHeaderContent","AuthorProfileImage","lighten","StyledWrapper","Wrapper","className","IndexLayout","PostCardStyles","PostCardImageLink","PostCardImage","PostCardContent","PostCardContentLink","PostCardTags","PostCardTitle","PostCardExcerpt","PostCardMeta","AuthorList","AuthorListItem","AuthorNameTooltip","StaticAvatar","ReadingTime","PostCard","post","frontmatter","image","to","fields","slug","childImageSharp","fluid","alt","style","height","tags","excerpt","author","id","_","src","avatar","fixed","timeToRead","SiteFooter","setLightness","SiteFooterContent","SiteFooterNav","Footer","Date","getFullYear","facebook","href","target","rel","SubscribeOverlayLogo","SubscribeLogo","SubscribeOverlay","Open","SubscribeOverlayClose","SubscribeOverlayContent","SubscribeOverlayTitle","SubscribeOverlayDescription","SubscribeModal","escFunction","event","key","close","setState","isOpen","unsubscribeEsc","state","componentWillUnmount","this","subscribeEsc","document","addEventListener","removeEventListener","open","onClick","SubscribeForm","HomeNavRaise","SiteNavStyles","SiteNavLeft","NavStyles","SiteNavRight","SocialLinks","SubscribeButton","SiteNav","subscribe","openModal","current","isHome","SiteNavLogo","role","ref","m","module","exports","require","default","Twitter","xmlns","viewBox","d","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","shape","pathname","SubscribeFormStyles","SubscribeEmail","SubscribeFormButton","mix","desaturate","FormGroup","action","method","name","noValidate","type","placeholder","position","left","aria-hidden","tabIndex","SiteNavLogoStyles","Facebook"],"mappings":"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","file":"1-62b0d7ecbd1ddb8595aa.js","sourcesContent":["export const colors = {\n  blue: '#3eb0ef',\n  jade: '#05b9a1',\n  green: '#a4d037',\n  purple: '#ad26b4',\n  yellow: '#fecd35',\n  red: '#f05230',\n  darkgrey: '#15171A',\n  midgrey: '#738a94',\n  lightgrey: '#c5d2d9',\n  whitegrey: '#e5eff5',\n  pink: '#fa3a57',\n  brown: '#a3821a',\n  gold: '#baa935'\n}","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","export interface WebsiteConfig {\n  title: string;\n  description: string;\n  coverImage: string;\n  logo: string;\n  /**\n   * Specifying a valid BCP 47 language helps screen readers announce text properly.\n   * See: https://dequeuniversity.com/rules/axe/2.2/valid-lang\n   */\n  lang: string;\n  /**\n   * blog full path, no ending slash!\n   */\n  siteUrl: string;\n  facebook?: string;\n  twitter?: string;\n  /**\n   * hide or show all email subscribe boxes\n   */\n  showSubscribe: boolean;\n  /**\n   * create a list on mailchimp and then create an embeddable signup form. this is the form action\n   */\n  mailchimpAction?: string;\n  /**\n   * this is the hidden input field name\n   */\n  mailchimpName?: string;\n}\n\nconst config: WebsiteConfig = {\n  title: 'twice fire',\n  description: 'aspects of Tom Watson',\n  coverImage: 'img/s.jpg',\n  logo: 'img/title-logo.png',\n  lang: 'en',\n  siteUrl: 'https://twicefire.com',\n  twitter: 'https://twitter.com/gabbymcnabb',\n  showSubscribe: false,\n  mailchimpAction: 'https://twitter.us19.list-manage.com/subscribe/post?u=a89b6987ac248c81b0b7f3a0f&amp;id=7d777b7d75',\n  mailchimpName: 'b_a89b6987ac248c81b0b7f3a0f_7d777b7d75',\n}\n\nexport default config\n","import { css } from 'emotion'\nimport styled from '@emotion/styled'\nimport { colors } from './colors'\nimport { darken, lighten } from 'polished'\n\nexport const outer = css`\n  position: relative;\n  padding: 0 4vw;\n`\n\n// Centered content container blocks\nexport const inner = css`\n  margin: 0 auto;\n  max-width: 1040px;\n  width: 100%;\n`\n\nexport const SiteMain = css`\n  z-index: 100;\n  flex-grow: 1;\n`\n\nexport const SiteTitle = styled.h1`\n  z-index: 10;\n  margin: 0;\n  padding: 0;\n  font-size: 3.8rem;\n  font-weight: 700;\n`\n\nexport const SiteDescription = styled.h2`\n  z-index: 10;\n  margin: 0;\n  padding: 5px 0;\n  font-size: 2.2rem;\n  font-weight: 300;\n  letter-spacing: 0.5px;\n  opacity: 0.8;\n`\n\nexport const PostFeed = css`\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -20px;\n  padding: 40px 0 0 0;\n`\n\nexport const PostFeedRaise = css`\n  @media (min-width: 900px) {\n    margin-top: -70px;\n    padding-top: 0;\n  }\n`\n\nexport const SocialLink = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  padding: 10px;\n  color: #fff;\n  opacity: 0.8;\n\n  :hover {\n    opacity: 1;\n  }\n\n  svg {\n    height: 1.8rem;\n    fill: #fff;\n  }\n`\n\nexport const SiteHeader = css`\n  position: relative;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  /* background: color(var(--darkgrey) l(-5%)) no-repeat center center; */\n  background: ${darken('0.05', colors.darkgrey)} no-repeat center center;\n  background-size: cover;\n`\n\nexport const SiteHeaderContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 10vw 4vw;\n  min-height: 200px;\n  max-height: 450px;\n  text-align: center;\n`\n\nexport const SiteHeaderStyles = css`\n  content: '';\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: auto;\n  left: 0;\n  z-index: 10;\n  display: block;\n  height: 80px;\n  background: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0));\n\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 10;\n    display: block;\n    background: rgba(0, 0, 0, 0.18);\n  }\n\n  :after {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: auto;\n    left: 0;\n    z-index: 10;\n    display: block;\n    height: 80px;\n    background: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0));\n  }\n  @media (max-width: 700px) {\n    padding-right: 0;\n    padding-left: 0;\n  }\n`\n\nexport const AuthorProfileImage = css`\n  display: block;\n  /* background: color(var(--lightgrey) l(+10%)); */\n  background: ${lighten('0.1', colors.lightgrey)};\n  border-radius: 100%;\n  object-fit: cover;\n  margin-right: 15px;\n  width: 60px;\n  height: 60px;\n`\n","import * as React from 'react';\nimport styled from '@emotion/styled'\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`\n\ninterface WrapperProps {\n  className?: string;\n}\n\nconst Wrapper: React.FunctionComponent<WrapperProps> = ({ children, className }) => (\n  <StyledWrapper className={className}>{children}</StyledWrapper>\n);\n\nexport default Wrapper;\n","import { injectGlobal } from 'emotion';\nimport { darken, lighten } from 'polished';\nimport * as React from 'react';\n\nimport { colors } from '../styles/colors';\n\n// tslint:disable-next-line:no-unused-expression\ninjectGlobal`\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font: inherit;\n  font-size: 100%;\n  vertical-align: baseline;\n}\nbody {\n  line-height: 1;\n}\nol,\nul {\n  list-style: none;\n}\nblockquote,\nq {\n  quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: \"\";\n  content: none;\n}\ntable {\n  border-spacing: 0;\n  border-collapse: collapse;\n}\nimg {\n  max-width: 100%;\n}\nhtml {\n  box-sizing: border-box;\n  font-family: sans-serif;\n\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n}\n*,\n*:before,\n*:after {\n  box-sizing: inherit;\n}\na {\n  background-color: transparent;\n}\na:active,\na:hover {\n  outline: 0;\n}\nb,\nstrong {\n  font-weight: bold;\n}\ni,\nem,\ndfn {\n  font-style: italic;\n}\nh1 {\n  margin: 0.67em 0;\n  font-size: 2em;\n}\nsmall {\n  font-size: 80%;\n}\nsub,\nsup {\n  position: relative;\n  font-size: 75%;\n  line-height: 0;\n  vertical-align: baseline;\n}\nsup {\n  top: -0.5em;\n}\nsub {\n  bottom: -0.25em;\n}\nimg {\n  border: 0;\n}\nsvg:not(:root) {\n  overflow: hidden;\n}\nmark {\n  background-color: #fdffb6;\n}\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n  font-size: 1em;\n}\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  margin: 0; \n  color: inherit; \n  font: inherit; \n}\nbutton {\n  overflow: visible;\n  border: none;\n}\nbutton,\nselect {\n  text-transform: none;\n}\nbutton,\nhtml input[type=\"button\"],\n\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n  cursor: pointer; \n\n  -webkit-appearance: button; \n}\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default;\n}\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  padding: 0;\n  border: 0;\n}\ninput {\n  line-height: normal;\n}\ninput:focus {\n  outline: none;\n}\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  box-sizing: border-box; \n  padding: 0; \n}\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\ninput[type=\"search\"] {\n  box-sizing: content-box; \n\n  -webkit-appearance: textfield; \n}\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\nlegend {\n  padding: 0; \n  border: 0; \n}\ntextarea {\n  overflow: auto;\n}\ntable {\n  border-spacing: 0;\n  border-collapse: collapse;\n}\ntd,\nth {\n  padding: 0;\n}\n\nhtml {\n  overflow-x: hidden;\n  overflow-y: scroll;\n  font-size: 62.5%;\n\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\nbody {\n  overflow-x: hidden;\n  /* color: color(var(--midgrey) l(-25%)); */\n  color: ${darken('0.25', colors.midgrey)};\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n  font-size: 1.5rem;\n  line-height: 1.6em;\n  font-weight: 400;\n  font-style: normal;\n  letter-spacing: 0;\n  text-rendering: optimizeLegibility;\n  background: #fff;\n\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  -moz-font-feature-settings: \"liga\" on;\n}\n\n::selection {\n  text-shadow: none;\n  /* background: color(var(--jade) lightness(+30%)); */\n  background: ${lighten('0.3', colors.jade)};\n}\n\nhr {\n  position: relative;\n  display: block;\n  width: 100%;\n  margin: 2.5em 0 3.5em;\n  padding: 0;\n  height: 1px;\n  border: 0;\n  /* border-top: 1px solid color(var(--lightgrey) l(+10%)); */\n  border-top: 1px solid ${lighten('0.1', colors.lightgrey)};\n}\n\naudio,\ncanvas,\niframe,\nimg,\nsvg,\nvideo {\n  vertical-align: middle;\n}\n\nfieldset {\n  margin: 0;\n  padding: 0;\n  border: 0;\n}\n\ntextarea {\n  resize: vertical;\n}\n\np,\nul,\nol,\ndl,\nblockquote {\n  margin: 1em 0 1.5em 0;\n}\n\nol,\nul {\n  padding-left: 1.3em;\n  padding-right: 1.5em;\n}\n\nol ol,\nul ul,\nul ol,\nol ul {\n  margin: 0.5em 0 1em;\n}\n\nul {\n  list-style: disc;\n}\n\nol {\n  list-style: decimal;\n}\n\nul,\nol {\n  max-width: 100%;\n}\n\nli {\n  margin: 0.5em 0;\n  padding-left: 0.3em;\n  line-height: 1.6em;\n}\n\ndt {\n  float: left;\n  margin: 0 20px 0 0;\n  width: 120px;\n  color: ${colors.darkgrey};\n  font-weight: 500;\n  text-align: right;\n}\n\ndd {\n  margin: 0 0 5px 0;\n  text-align: left;\n}\n\nblockquote {\n  margin: 1.5em 0;\n  padding: 0 1.6em 0 1.6em;\n  border-left: ${colors.whitegrey} 0.5em solid;\n}\n\nblockquote p {\n  margin: 0.8em 0;\n  font-size: 1.2em;\n  font-weight: 300;\n}\n\nblockquote small {\n  display: inline-block;\n  margin: 0.8em 0 0.8em 1.5em;\n  font-size: 0.9em;\n  opacity: 0.8;\n}\n\nblockquote small:before {\n  content: \"\\\\2014 \\\\00A0\";\n}\n\nblockquote cite {\n  font-weight: bold;\n}\nblockquote cite a {\n  font-weight: normal;\n}\n\na {\n  /* color: color(var(--jade) l(-5%)); */\n  color: ${darken('0.05', colors.jade)};\n  text-decoration: none;\n}\n\na:hover {\n  text-decoration: underline;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  margin-top: 0;\n  line-height: 1.15;\n  font-weight: 700;\n  text-rendering: optimizeLegibility;\n}\n\nh1 {\n  margin: 0 0 0.5em 0;\n  font-size: 5rem;\n  font-weight: 700;\n}\n@media (max-width: 500px) {\n  h1 {\n      font-size: 2.2rem;\n  }\n}\n\nh2 {\n  margin: 1.5em 0 0.5em 0;\n  font-size: 2rem;\n}\n@media (max-width: 500px) {\n  h2 {\n      font-size: 1.8rem;\n  }\n}\n\nh3 {\n  margin: 1.5em 0 0.5em 0;\n  font-size: 1.8rem;\n  font-weight: 500;\n}\n@media (max-width: 500px) {\n  h3 {\n      font-size: 1.7rem;\n  }\n}\n\nh4 {\n  margin: 1.5em 0 0.5em 0;\n  font-size: 1.6rem;\n  font-weight: 500;\n}\n\nh5 {\n  margin: 1.5em 0 0.5em 0;\n  font-size: 1.4rem;\n  font-weight: 500;\n}\n\nh6 {\n  margin: 1.5em 0 0.5em 0;\n  font-size: 1.4rem;\n  font-weight: 500;\n}\n\nbody {\n  background: #f4f8fb;\n}\n`\n\ninterface IndexProps {\n  className?: string;\n}\n\nconst IndexLayout: React.FunctionComponent<IndexProps> = props => {\n  return <div className={props.className}>{props.children}</div>;\n};\n\nexport default IndexLayout;\n","import { Link } from 'gatsby';\nimport Img from 'gatsby-image';\nimport * as _ from 'lodash';\nimport { lighten } from 'polished';\nimport * as React from 'react';\nimport styled from '@emotion/styled'\nimport { css } from 'emotion'\n\nimport { colors } from '../styles/colors';\nimport { PageContext } from '../templates/post';\n\nconst PostCardStyles = css`\n  flex: 1 1 300px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0 20px 40px;\n  min-height: 300px;\n  background: #fff center center;\n  background-size: cover;\n  border-radius: 5px;\n  box-shadow: rgba(39, 44, 49, 0.06) 8px 14px 38px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\n  transition: all 0.5s ease;\n\n  :hover {\n    box-shadow: rgba(39, 44, 49, 0.07) 8px 28px 50px, rgba(39, 44, 49, 0.04) 1px 6px 12px;\n    transition: all 0.4s ease;\n    transform: translate3D(0, -1px, 0) scale(1.02);\n  }\n`\n\nconst PostCardImageLink = css`\n  position: relative;\n  display: block;\n  overflow: hidden;\n  border-radius: 5px 5px 0 0;\n`\n\nconst PostCardImage = styled.div`\n  width: auto;\n  height: 200px;\n  background: ${colors.lightgrey} no-repeat center center;\n  background-size: cover;\n`\n\nconst PostCardContent = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst PostCardContentLink = css`\n  position: relative;\n  flex-grow: 1;\n  display: block;\n  padding: 25px 25px 0;\n  color: ${colors.darkgrey};\n\n  :hover {\n    text-decoration: none;\n  }\n`\n\nconst PostCardTags = styled.span`\n  display: block;\n  margin-bottom: 4px;\n  color: ${colors.midgrey};\n  font-size: 1.2rem;\n  line-height: 1.15em;\n  font-weight: 500;\n  letter-spacing: 0.5px;\n  text-transform: uppercase;\n`\n\nconst PostCardTitle = styled.h2`\n  margin-top: 0;\n`\n\nconst PostCardExcerpt = styled.section`\n  font-family: Georgia, serif;\n`\n\nconst PostCardMeta = styled.footer`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  padding: 0 25px 25px;\n`\n\nconst AuthorList = styled.ul`\n  display: flex;\n  flex-wrap: wrap-reverse;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`\n\nconst AuthorListItem = styled.li`\n  position: relative;\n  flex-shrink: 0;\n  margin: 0;\n  padding: 0;\n\n  :nth-child(1) {\n    z-index: 10;\n  }\n  :nth-child(2) {\n    z-index: 9;\n  }\n  :nth-child(3) {\n    z-index: 8;\n  }\n  :nth-child(4) {\n    z-index: 7;\n  }\n  :nth-child(5) {\n    z-index: 6;\n  }\n  :nth-child(6) {\n    z-index: 5;\n  }\n  :nth-child(7) {\n    z-index: 4;\n  }\n  :nth-child(8) {\n    z-index: 3;\n  }\n  :nth-child(9) {\n    z-index: 2;\n  }\n  :nth-child(10) {\n    z-index: 1;\n  }\n  :hover .author-name-tooltip {\n    opacity: 1;\n    transform: translateY(0px);\n  }\n`\n\nconst AuthorNameTooltip = styled.div`\n  position: absolute;\n  bottom: 105%;\n  z-index: 999;\n  display: block;\n  padding: 2px 8px;\n  color: white;\n  font-size: 1.2rem;\n  letter-spacing: 0.2px;\n  white-space: nowrap;\n  background: ${colors.darkgrey};\n  border-radius: 3px;\n  box-shadow: rgba(39, 44, 49, 0.08) 0 12px 26px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\n  opacity: 0;\n  transition: all 0.3s cubic-bezier(0.4, 0.01, 0.165, 0.99);\n  transform: translateY(6px);\n  pointer-events: none;\n\n  @media (max-width: 650px) {\n    display: none;\n  }\n`\n\nconst StaticAvatar = css`\n  display: block;\n  overflow: hidden;\n  margin: 0 -5px;\n  width: 34px;\n  height: 34px;\n  border: #fff 2px solid;\n  border-radius: 100%;\n`\n\nconst AuthorProfileImage = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  /* background: color(var(--lightgrey) l(+10%)); */\n  background: ${lighten('0.1', colors.lightgrey)}\n  border-radius: 100%;\n  object-fit: cover;\n`\n\nconst ReadingTime = styled.span`\n  flex-shrink: 0;\n  margin-left: 20px;\n  color: ${colors.midgrey};\n  font-size: 1.2rem;\n  line-height: 33px;\n  font-weight: 500;\n  letter-spacing: 0.5px;\n  text-transform: uppercase;\n`\n\nexport interface PostCardProps {\n  post: PageContext;\n}\n\nconst PostCard: React.FunctionComponent<PostCardProps> = ({ post }) => {\n  return (\n    <article className={`post-card ${PostCardStyles} ${!post.frontmatter.image ? 'no-image' : ''}`}>\n      {post.frontmatter.image && (\n        <Link className={`${PostCardImageLink} post-card-image-link`} to={post.fields.slug}>\n          <PostCardImage className=\"post-card-image\">\n            {post.frontmatter.image &&\n              post.frontmatter.image.childImageSharp.fluid && (\n                <Img\n                  alt={`${post.frontmatter.title} cover image`}\n                  style={{ height: '100%' }}\n                  fluid={post.frontmatter.image.childImageSharp.fluid}\n                />\n              )}\n          </PostCardImage>\n        </Link>\n      )}\n      <PostCardContent className=\"post-card-content\">\n        <Link className={`${PostCardContentLink} post-card-content-link`} to={post.fields.slug}>\n          <header className=\"post-card-header\">\n            {post.frontmatter.tags && <PostCardTags>{post.frontmatter.tags[0]}</PostCardTags>}\n            <PostCardTitle>{post.frontmatter.title}</PostCardTitle>\n          </header>\n          <PostCardExcerpt>\n            <p>{post.frontmatter.excerpt}</p>\n          </PostCardExcerpt>\n        </Link>\n        <PostCardMeta className=\"post-card-meta\">\n          <AuthorList>\n            <AuthorListItem>\n              <AuthorNameTooltip className=\"author-name-tooltip\">\n                {post.frontmatter.author.id}\n              </AuthorNameTooltip>\n              <Link\n                className={`${StaticAvatar}`}\n                to={`/author/${_.kebabCase(post.frontmatter.author.id)}/`}\n              >\n                <img\n                  className={`${AuthorProfileImage}`}\n                  src={post.frontmatter.author.avatar.children[0].fixed.src}\n                  alt={post.frontmatter.author.id}\n                />\n              </Link>\n            </AuthorListItem>\n          </AuthorList>\n          <ReadingTime>{post.timeToRead} min read</ReadingTime>\n        </PostCardMeta>\n      </PostCardContent>\n    </article>\n  );\n};\n\nexport default PostCard;\n","import { Link } from 'gatsby';\nimport { setLightness } from 'polished';\nimport * as React from 'react';\nimport styled from '@emotion/styled'\nimport { css } from 'emotion'\n\nimport { colors } from '../styles/colors';\nimport { outer, inner } from '../styles/shared';\nimport config from '../website-config';\n\nconst SiteFooter = css`\n  position: relative;\n  padding-top: 20px;\n  padding-bottom: 60px;\n  color: #fff;\n  background: ${setLightness('0.0015', colors.darkgrey)};\n`\n\nconst SiteFooterContent = css`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.7);\n  font-size: 1.3rem;\n  a {\n    color: rgba(255, 255, 255, 0.7);\n  }\n  a:hover {\n    color: rgba(255, 255, 255, 1);\n    text-decoration: none;\n  }\n  @media (max-width: 650px) {\n    flex-direction: column;\n  }\n`\n\nconst SiteFooterNav = styled.nav`\n  display: flex;\n\n  a {\n    position: relative;\n    margin-left: 20px;\n  }\n\n  a:before {\n    content: '';\n    position: absolute;\n    top: 11px;\n    left: -11px;\n    display: block;\n    width: 2px;\n    height: 2px;\n    background: #fff;\n    border-radius: 100%;\n  }\n\n  a:first-of-type:before {\n    display: none;\n  }\n  @media (max-width: 650px) {\n    a:first-child {\n      margin-left: 0;\n    }\n  }\n`\n\nconst Footer: React.FunctionComponent = () => {\n  return (\n    <footer className={`${outer} ${SiteFooter}`}>\n      <div className={`${inner} ${SiteFooterContent}`}>\n        <section className=\"copyright\">\n          <Link to=\"/\">{config.title}</Link> &copy; {new Date().getFullYear()}\n        </section>\n        <SiteFooterNav>\n          <Link to=\"/\">Latest Posts</Link>\n          {config.facebook && (\n            <a href={config.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n              Facebook\n            </a>\n          )}\n          {config.twitter && (\n            <a href={config.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n              Twitter\n            </a>\n          )}\n\n          <Link to=\"/rss.xml\">RSS</Link>\n        </SiteFooterNav>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { graphql, StaticQuery } from 'gatsby'\nimport * as React from 'react'\nimport styled from '@emotion/styled'\n\nimport config from '../../website-config'\n\nconst SubscribeOverlayLogo = styled.img`\n  position: fixed;\n  top: 23px;\n  left: 30px;\n  height: 30px;\n`\n\ninterface SiteNavLogoProps {\n  logo?: {\n    childImageSharp: {\n      fixed: any;\n    };\n  };\n}\n\nconst SubscribeLogo = () => (\n  <StaticQuery\n    query={graphql`\n      query SubscribeOverlayLogo {\n        logo: file(relativePath: { eq: \"img/title-logo.png\" }) {\n          childImageSharp {\n            # Specify the image processing specifications right in the query.\n            # Makes it trivial to update as your page's design changes.\n            fixed {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    // tslint:disable-next-line:react-this-binding-issue\n    render={(data: SiteNavLogoProps) =>\n      data.logo && (\n        <SubscribeOverlayLogo src={data.logo.childImageSharp.fixed.src} alt={config.title} />\n      )\n    }\n  />\n);\n\nexport default SubscribeLogo;\n","import * as React from 'react';\nimport styled from '@emotion/styled'\nimport { css } from 'emotion'\n\nimport { colors } from '../../styles/colors';\nimport config from '../../website-config';\nimport SubscribeForm from './SubscribeForm';\nimport SubscribeLogo from './SubscribeLogo';\n\nconst SubscribeOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 9000;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 25, 40, 0.97);\n  opacity: 0;\n  transition: opacity 200ms ease-in;\n  pointer-events: none;\n  backdrop-filter: blur(3px);\n\n  form {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0 auto;\n    max-width: 500px;\n  }\n\n  .form-group {\n    flex-grow: 1;\n  }\n\n  .subscribe-email {\n    display: block;\n    padding: 14px 20px;\n    width: 100%;\n    border: none;\n    color: ${colors.midgrey};\n    font-size: 2rem;\n    line-height: 1em;\n    font-weight: normal;\n    letter-spacing: 0.5px;\n    user-select: text;\n    border-radius: 8px;\n    transition: border-color 0.15s linear;\n\n    -webkit-appearance: none;\n  }\n\n  button {\n    display: inline-block;\n    margin: 0 0 0 15px;\n    padding: 0 25px;\n    height: 52px;\n    outline: none;\n    color: #fff;\n    font-size: 1.7rem;\n    line-height: 37px;\n    font-weight: 400;\n    text-align: center;\n    text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.1);\n    background: linear-gradient(\n      color(var(--jade) whiteness(+7%)),\n      color(var(--jade) lightness(-7%) saturation(-10%)) 60%,\n      color(var(--jade) lightness(-7%) saturation(-10%)) 90%,\n      color(var(--jade) lightness(-4%) saturation(-10%))\n    );\n    border-radius: 8px;\n    box-shadow: 0 0 0 1px inset rgba(0, 0, 0, 0.14);\n\n    -webkit-font-smoothing: subpixel-antialiased;\n  }\n`\n\nconst Open = css`\n  opacity: 1;\n  pointer-events: auto;\n`\n\nconst SubscribeOverlayClose = styled.a`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: block;\n\n  :before {\n    content: '';\n    position: absolute;\n    top: 40px;\n    right: 25px;\n    display: block;\n    width: 30px;\n    height: 2px;\n    background: #fff;\n    opacity: 0.8;\n    transform: rotate(45deg);\n  }\n\n  :after {\n    content: '';\n    position: absolute;\n    top: 40px;\n    right: 25px;\n    display: block;\n    width: 30px;\n    height: 2px;\n    background: #fff;\n    opacity: 0.8;\n    transform: rotate(-45deg);\n  }\n\n  :hover {\n    cursor: default;\n  }\n`\n\nconst SubscribeOverlayContent = styled.div`\n  position: relative;\n  z-index: 9999;\n  margin: 0 0 5vw 0;\n  padding: 4vw;\n  color: #fff;\n  text-align: center;\n`\n\nconst SubscribeOverlayTitle = styled.h1`\n  display: inline-block;\n  margin: 0 0 10px 0;\n  font-size: 6rem;\n  line-height: 1.15em;\n`\n\nconst SubscribeOverlayDescription = styled.p`\n  margin: 0 auto 50px;\n  max-width: 650px;\n  font-family: Georgia, serif;\n  font-size: 3rem;\n  line-height: 1.3em;\n  font-weight: 300;\n  opacity: 0.8;\n`\n\ninterface SubscribeState {\n  isOpen: boolean;\n}\n\nclass SubscribeModal extends React.Component<any, SubscribeState> {\n  constructor(props: any) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeEsc();\n  }\n\n  escFunction = (event: KeyboardEvent) => {\n    if (event.key === 'Escape') {\n      this.close();\n    }\n  };\n\n  subscribeEsc() {\n    document.addEventListener('keydown', this.escFunction, false);\n  }\n\n  unsubscribeEsc() {\n    document.removeEventListener('keydown', this.escFunction, false);\n  }\n\n  open() {\n    this.setState({ isOpen: true });\n    this.subscribeEsc();\n  }\n\n  close = () => {\n    this.setState({ isOpen: false });\n    this.unsubscribeEsc();\n  };\n\n  render() {\n    return (\n      <SubscribeOverlay className={`${this.state.isOpen ? Open : ''}`}>\n        <SubscribeOverlayClose onClick={this.close} />\n        <SubscribeOverlayContent>\n          <SubscribeLogo />\n          <SubscribeOverlayTitle>Subscribe to {config.title}</SubscribeOverlayTitle>\n          <SubscribeOverlayDescription>\n            Stay up to date! Get all the latest &amp; greatest posts delivered straight to your\n            inbox\n          </SubscribeOverlayDescription>\n          <SubscribeForm />\n        </SubscribeOverlayContent>\n      </SubscribeOverlay>\n    );\n  }\n}\n\nexport default SubscribeModal;\n","// tslint:disable:no-http-string\nimport { Link } from 'gatsby';\nimport * as React from 'react';\nimport styled from '@emotion/styled'\nimport { css } from 'emotion'\n\nimport { SocialLink } from '../../styles/shared';\nimport config from '../../website-config';\nimport Facebook from '../icons/facebook';\nimport Twitter from '../icons/twitter';\nimport SubscribeModal from '../subsribe/SubscribeOverlay';\nimport SiteNavLogo from './SiteNavLogo';\n\nconst HomeNavRaise = css`\n  @media (min-width: 900px) {\n    position: relative;\n    top: -70px;\n  }\n`\n\nconst SiteNavStyles = css`\n  position: relative;\n  z-index: 300;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  overflow-y: hidden;\n  height: 40px;\n  font-size: 1.2rem;\n`\n\nconst SiteNavLeft = styled.div`\n  display: flex;\n  align-items: center;\n  overflow-x: auto;\n  overflow-y: hidden;\n  -webkit-overflow-scrolling: touch;\n  margin-right: 10px;\n  padding-bottom: 80px;\n  letter-spacing: 0.4px;\n  white-space: nowrap;\n\n  -ms-overflow-scrolling: touch;\n\n  @media (max-width: 700px) {\n    margin-right: 0;\n    padding-left: 4vw;\n  }\n`\n\nconst NavStyles = css`\n  display: flex;\n  margin: 0 0 0 -12px;\n  padding: 0;\n  list-style: none;\n\n  li {\n    display: block;\n    margin: 0;\n    padding: 0;\n    text-transform: uppercase;\n  }\n\n  li a {\n    display: block;\n    margin: 0;\n    padding: 10px 12px;\n    color: #fff;\n    opacity: 0.8;\n  }\n\n  li a:hover {\n    text-decoration: none;\n    opacity: 1;\n  }\n`\n\nconst SiteNavRight = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  height: 40px;\n\n  @media (max-width: 700px) {\n    display: none;\n  }\n`\n\nconst SocialLinks = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  a:last-of-type {\n    padding-right: 20px;\n  }\n`\n\nconst SubscribeButton = styled.a`\n  display: block;\n  padding: 4px 10px;\n  border: #fff 1px solid;\n  color: #fff;\n  font-size: 1.2rem;\n  line-height: 1em;\n  border-radius: 10px;\n  opacity: 0.8;\n\n  :hover {\n    text-decoration: none;\n    opacity: 1;\n    cursor: pointer;\n  }\n`\n\ninterface SiteNavProps {\n  isHome?: boolean;\n}\n\ninterface SiteNaveState {\n  isOpen: boolean;\n}\n\nclass SiteNav extends React.Component<SiteNavProps, SiteNaveState> {\n  subscribe = React.createRef<SubscribeModal>();\n\n  constructor(props: SiteNavProps) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n  openModal = () => {\n    if (this.subscribe.current) {\n      this.subscribe.current.open();\n    }\n  }\n\n  render() {\n    const { isHome = false } = this.props;\n    return (\n      <nav className={`${isHome ? HomeNavRaise : ''} ${SiteNavStyles}`}>\n        <SiteNavLeft>\n          {!isHome && <SiteNavLogo />}\n          <ul className={`${NavStyles}`} role=\"menu\">\n            {/* TODO: mark current nav item - add class nav-current */}\n            <li role=\"menuitem\">\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li role=\"menuitem\">\n              <Link to=\"/about\">About</Link>\n            </li>\n            <li role=\"menuitem\">\n              <Link to=\"/tags/dance/\">dance</Link>\n            </li>\n            <li role=\"menuitem\">\n              <Link to=\"/tags/priors/\">priors</Link>\n            </li>\n            <li role=\"menuitem\">\n              <Link to=\"/tags/rites-of-passage/\">rites</Link>\n            </li>\n          </ul>\n        </SiteNavLeft>\n        <SiteNavRight>\n          <SocialLinks>\n             {config.facebook && (\n              <a\n                className={`${SocialLink}`}\n                href={config.facebook}\n                target=\"_blank\"\n                title=\"Facebook\"\n                rel=\"noopener noreferrer\"\n              >\n                <Facebook />\n              </a>\n            )}\n            {config.twitter && (\n              <a\n                className={`${SocialLink}`}\n                href={config.twitter}\n                title=\"Twitter\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Twitter />\n              </a>\n            )}\n          </SocialLinks>\n          {config.showSubscribe && (\n            <SubscribeButton onClick={this.openModal}>Subscribe</SubscribeButton>\n          )}\n          {config.showSubscribe && (\n            <SubscribeModal ref={this.subscribe} />\n          )}\n        </SiteNavRight>\n      </nav>\n    );\n  }\n}\n\nexport default SiteNav;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","// tslint:disable:no-http-string\nimport * as React from 'react';\n\nconst Twitter: React.FunctionComponent = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n    <path d=\"M30.063 7.313c-.813 1.125-1.75 2.125-2.875 2.938v.75c0 1.563-.188 3.125-.688 4.625a15.088 15.088 0 0 1-2.063 4.438c-.875 1.438-2 2.688-3.25 3.813a15.015 15.015 0 0 1-4.625 2.563c-1.813.688-3.75 1-5.75 1-3.25 0-6.188-.875-8.875-2.625.438.063.875.125 1.375.125 2.688 0 5.063-.875 7.188-2.5-1.25 0-2.375-.375-3.375-1.125s-1.688-1.688-2.063-2.875c.438.063.813.125 1.125.125.5 0 1-.063 1.5-.25-1.313-.25-2.438-.938-3.313-1.938a5.673 5.673 0 0 1-1.313-3.688v-.063c.813.438 1.688.688 2.625.688a5.228 5.228 0 0 1-1.875-2c-.5-.875-.688-1.813-.688-2.75 0-1.063.25-2.063.75-2.938 1.438 1.75 3.188 3.188 5.25 4.25s4.313 1.688 6.688 1.813a5.579 5.579 0 0 1 1.5-5.438c1.125-1.125 2.5-1.688 4.125-1.688s3.063.625 4.188 1.813a11.48 11.48 0 0 0 3.688-1.375c-.438 1.375-1.313 2.438-2.563 3.188 1.125-.125 2.188-.438 3.313-.875z\" />\n  </svg>\n);\nexport default Twitter;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { darken, desaturate, lighten, mix } from 'polished';\nimport * as React from 'react';\nimport styled from '@emotion/styled'\nimport { css } from 'emotion'\n\nimport { colors } from '../../styles/colors';\nimport config from '../../website-config';\n\n\nconst SubscribeFormStyles = css`\n  @media (max-width: 500px) {\n    -ms-flex-direction: column;\n    flex-direction: column;\n  }\n`\n\nconst SubscribeEmail = styled.input`\n  display: block;\n  padding: 10px;\n  width: 100%;\n  /* border: color(var(--lightgrey) l(+7%)) 1px solid; */\n  border: ${lighten('0.07', colors.lightgrey)};\n  color: ${colors.midgrey};\n  font-size: 1.8rem;\n  line-height: 1em;\n  font-weight: normal;\n  user-select: text;\n  border-radius: 5px;\n  transition: border-color 0.15s linear;\n\n  -webkit-appearance: none;\n  :focus {\n    outline: 0;\n    /* border-color: color(var(--lightgrey) l(-2%)); */\n    border-color: ${darken('0.02', colors.lightgrey)};\n  }\n`\n\nconst SubscribeFormButton = styled.button`\n  display: inline-block;\n  margin: 0 0 0 10px;\n  padding: 0 20px;\n  height: 41px;\n  outline: none;\n  color: #fff;\n  font-size: 1.5rem;\n  line-height: 37px;\n  font-weight: 400;\n  text-align: center;\n  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.1);\n  /* background: linear-gradient(\n    color(var(--jade) whiteness(+7%)),\n    color(var(--jade) lightness(-7%) saturation(-10%)) 60%,\n    color(var(--jade) lightness(-7%) saturation(-10%)) 90%,\n    color(var(--jade) lightness(-4%) saturation(-10%))\n  ); */\n  background: linear-gradient(\n    ${mix('0.1', '#fff', colors.jade)},\n    ${desaturate('0.1', darken('0.07', colors.jade))} 60%,\n    ${desaturate('0.1', darken('0.07', colors.jade))} 90%,\n    ${desaturate('0.1', darken('0.04', colors.jade))}\n  );\n  border-radius: 5px;\n  box-shadow: 0 0 0 1px inset rgba(0, 0, 0, 0.14);\n\n  -webkit-font-smoothing: subpixel-antialiased;\n\n  :active,\n  :focus {\n    /* background: color(var(--jade) lightness(-9%) saturation(-10%)); */\n    background: ${desaturate('0.1', darken('0.09', colors.jade))};\n  }\n  @media (max-width: 500px) {\n    margin: 10px 0 0;\n    width: 100%;\n  }\n`\n\nconst FormGroup = styled.div`\n  flex-grow: 1;\n  @media (max-width: 500px) {\n    width: 100%;\n  }\n`\n\nconst SubscribeForm: React.FunctionComponent = () => {\n  return (\n      <form\n        className={`${SubscribeFormStyles}`}\n        action={config.mailchimpAction}\n        method=\"post\"\n        id=\"mc-embedded-subscribe-form\"\n        name=\"mc-embedded-subscribe-form\"\n        target=\"_blank\"\n        noValidate\n      >\n        {/* This is required for the form to work correctly  */}\n        <FormGroup className=\"form-group\">\n          <SubscribeEmail className=\"subscribe-email\" type=\"email\" name=\"EMAIL\" placeholder=\"youremail@example.com\" />\n        </FormGroup>\n        <div style={{ position: 'absolute', left: '-5000px' }} aria-hidden=\"true\">\n          <input type=\"text\" name={config.mailchimpName} tabIndex={-1} />\n        </div>\n        <SubscribeFormButton type=\"submit\">\n          <span>Subscribe</span>\n        </SubscribeFormButton>\n      </form>\n  );\n};\n\nexport default SubscribeForm;\n","import { graphql, Link, StaticQuery } from 'gatsby';\nimport * as React from 'react';\nimport { css } from 'emotion'\n\nimport config from '../../website-config';\n\nconst SiteNavLogoStyles = css`\n  flex-shrink: 0;\n  display: block;\n  margin-right: 24px;\n  padding: 11px 0;\n  color: #fff;\n  font-size: 1.7rem;\n  line-height: 1em;\n  font-weight: bold;\n  letter-spacing: -0.5px;\n\n  :hover {\n    text-decoration: none;\n  }\n\n  img {\n    display: block;\n    width: auto;\n    height: 21px;\n  }\n`\n\ninterface SiteNavLogoProps {\n  logo?: {\n    childImageSharp: {\n      fixed: any;\n    };\n  };\n}\n\nconst SiteNavLogo = () => (\n  <StaticQuery\n    query={graphql`\n      query HeadingQuery {\n        logo: file(relativePath: { eq: \"img/title-logo.png\" }) {\n          childImageSharp {\n            fixed {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    // tslint:disable-next-line:react-this-binding-issue\n    render={(data: SiteNavLogoProps) => (\n      <Link className={`${SiteNavLogoStyles} site-nav-logo`} to=\"/\">\n        {data.logo ? (\n          <img src={data.logo.childImageSharp.fixed.src} alt={config.title} />\n        ) : (\n          config.title\n        )}\n      </Link>\n    )}\n  />\n);\n\nexport default SiteNavLogo;\n","// tslint:disable:no-http-string\nimport * as React from 'react';\n\nconst Facebook: React.FunctionComponent = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" style={{ height: '1.5rem' }}>\n    <path d=\"M19 6h5V0h-5c-3.86 0-7 3.14-7 7v3H8v6h4v16h6V16h5l1-6h-6V7c0-.542.458-1 1-1z\" />\n  </svg>\n);\nexport default Facebook;\n"],"sourceRoot":""}